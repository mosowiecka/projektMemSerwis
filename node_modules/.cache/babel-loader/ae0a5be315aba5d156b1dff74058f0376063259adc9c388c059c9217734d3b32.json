{"ast":null,"code":"var _jsxFileName = \"/Users/monika/Desktop/my-app/projektMemSerwis/src/components/memBase.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TileStyle = {\n  width: 450,\n  height: 450\n};\nconst ImageStyle = {\n  objectFit: \"contain\"\n};\nconst LoaderStyle = {\n  border: \"1px solid black\",\n  display: \"inline-block\"\n};\nconst MEMES = [{\n  title: \"Mem1\",\n  upvotes: 6,\n  downvotes: 0,\n  img: \"mem1.jpeg\"\n}, {\n  title: \"Mem2\",\n  upvotes: 3,\n  downvotes: 0,\n  img: \"mem2.jpeg\"\n}, {\n  title: \"Mem3\",\n  upvotes: 4,\n  downvotes: 0,\n  img: \"mem3.jpeg\"\n}, {\n  title: \"Mem4\",\n  upvotes: 5,\n  downvotes: 0,\n  img: \"mem4.jpeg\"\n}, {\n  title: \"Mem5\",\n  upvotes: 0,\n  downvotes: 0,\n  img: \"mem5.jpeg\"\n}, {\n  title: \"Mem6\",\n  upvotes: 14,\n  downvotes: 2,\n  img: \"mem6.jpeg\"\n}, {\n  title: \"Mem7\",\n  upvotes: 1,\n  downvotes: 25,\n  img: \"mem7.jpeg\"\n}, {\n  title: \"Mem8\",\n  upvotes: 18,\n  downvotes: 2,\n  img: \"mem8.jpeg\"\n}, {\n  title: \"Mem9\",\n  upvotes: 1,\n  downvotes: 10,\n  img: \"mem9.jpeg\"\n}, {\n  title: \"Mem10\",\n  upvotes: 29,\n  downvotes: 7,\n  img: \"mem10.jpeg\"\n}];\nconst handlechange = index => {\n  const newUsers = [...users];\n  newUsers[index].name = 'New Name';\n  newUsers[index].rollNo = 'New RollNo';\n  setUsers(newUsers);\n};\nexport const Memlist = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: MEMES.filter(mems => mems.upvotes - mems.downvotes > 5 && props.page === \"hot\" || mems.upvotes - mems.downvotes <= 5 && props.page === \"regular\").map(mem => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/' + mem.img,\n          alt: \"logo\",\n          style: {\n            ...TileStyle,\n            ...ImageStyle,\n            ...LoaderStyle\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: '',\n            children: [\"+ \", mem.upvotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: '',\n            children: [\"- \", mem.downvotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_c = Memlist;\nvar _c;\n$RefreshReg$(_c, \"Memlist\");","map":{"version":3,"names":["TileStyle","width","height","ImageStyle","objectFit","LoaderStyle","border","display","MEMES","title","upvotes","downvotes","img","handlechange","index","newUsers","users","name","rollNo","setUsers","Memlist","props","filter","mems","page","map","mem","process","env","PUBLIC_URL"],"sources":["/Users/monika/Desktop/my-app/projektMemSerwis/src/components/memBase.jsx"],"sourcesContent":["const TileStyle = {\n    width: 450,\n    height: 450,\n};\n\nconst ImageStyle = {\n    objectFit: \"contain\",\n};\nconst LoaderStyle = {\n    border: \"1px solid black\",\n    display: \"inline-block\",\n};\nconst MEMES = [\n    {\n        title: \"Mem1\",\n        upvotes: 6,\n        downvotes: 0,\n        img: \"mem1.jpeg\",\n    },\n    {\n        title: \"Mem2\",\n        upvotes: 3,\n        downvotes: 0,\n        img: \"mem2.jpeg\",\n    },\n    {\n        title: \"Mem3\",\n        upvotes: 4,\n        downvotes: 0,\n        img: \"mem3.jpeg\",\n    },\n    {\n        title: \"Mem4\",\n        upvotes: 5,\n        downvotes: 0,\n        img: \"mem4.jpeg\",\n    },\n    {\n        title: \"Mem5\",\n        upvotes: 0,\n        downvotes: 0,\n        img: \"mem5.jpeg\",\n    },\n    {\n        title: \"Mem6\",\n        upvotes: 14,\n        downvotes: 2,\n        img: \"mem6.jpeg\",\n    },\n    {\n        title: \"Mem7\",\n        upvotes: 1,\n        downvotes: 25,\n        img: \"mem7.jpeg\",\n    },\n    {\n        title: \"Mem8\",\n        upvotes: 18,\n        downvotes: 2,\n        img: \"mem8.jpeg\",\n    },\n    {\n        title: \"Mem9\",\n        upvotes: 1,\n        downvotes: 10,\n        img: \"mem9.jpeg\",\n    },\n    {\n        title: \"Mem10\",\n        upvotes: 29,\n        downvotes: 7,\n        img: \"mem10.jpeg\",\n    },\n];\n\nconst handlechange = (index) => {\n    const newUsers = [...users];\n    newUsers[index].name = 'New Name';\n    newUsers[index].rollNo = 'New RollNo';\n    setUsers(newUsers);\n  };\n\nexport const Memlist = (props) => {\n    return (\n        <div>\n\n            {MEMES.filter(\n                mems => (mems.upvotes - mems.downvotes > 5 && props.page === \"hot\")\n                    || (mems.upvotes - mems.downvotes <= 5 && props.page === \"regular\")\n            ).map((mem) => {\n                return (\n                    <div>\n                        <img\n                            src={process.env.PUBLIC_URL + '/' + mem.img} alt=\"logo\"\n                            style={{ ...TileStyle, ...ImageStyle, ...LoaderStyle }}\n                        />\n                        <div>\n                            <button onClick={''}>+ {mem.upvotes}</button>\n                            <button onClick={''}>- {mem.downvotes}</button>\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n\n    \n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}